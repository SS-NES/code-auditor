- name: No citation file.
  suggestion: A citation file is a plain text file with human- and
    machine-readable citation information for software. You can include one to
    your code base to let others know how to correctly cite your software.
    You can read more on the Citation File Format at
    https://citation-file-format.github.io/.

- name: Multiple license files found.
  suggestion: Keep only one of the license files and remove the others.

- name: Invalid setup.cfg file.
  suggestion: Check the `setup.cfg specification
    <https://setuptools.pypa.io/en/latest/userguide/declarative_config.html>`_
    to correct the file.

- name: Invalid pyproject.toml file.
  suggestion: Check the `pyproject.toml specification
    <https://packaging.python.org/en/latest/specifications/pyproject-toml/>`_
    to correct the file.

- match: License files do not match.+
  suggestion: Select one of the files as the license file and remove the others.

- match: License identifier .+ does not match the license file.
  suggestion: Set the license identifier to the one that corresponds to the
    license file. You can find the list of license identifiers at the
    `SPDX License List <https://spdx.org/licenses/>`_.

- match: No code of conduct.
  suggestion: A code of conduct is a document that establishes expectations for
    behavior for your project's participants. Adopting, and enforcing, a code
    of conduct can help create a positive social atmoshpere for your community.
    You can read more on code of conduct at `Open Source Guides
    <https://opensource.guide/code-of-conduct/>`_, and use the `Contributor
    Covenant <https://www.contributor-covenant.org/>`_ as a template for your
    own.

- match: No contributing guidelines.
  suggestion: Contributing guidelines in a document describing how other may
    contribute to your software project. The document explains how anyone
    can engage in activities such as formatting code for submission or
    submitting patches. You can read more on how to build a contributing
    guidelines on `Mozilla Science Lab
    <https://mozillascience.github.io/working-open-workshop/contributing/>`_.

- match: Multiple values exists for .+.
  suggestion: Choose one of the values listed for the attribute in the Metadata
    section below and update the specified files accordingly to ensure
    consistency.

- match: No notice file.
  suggestion: A notice file serves to provide attribution, legal notices, and
    licensing information required by third-party dependencies. It is primarily
    used to comply with attribution requirements of certain licenses (e.g.,
    Apache 2.0) when redistributing software that includes third-party code.

- match: No version control.
  suggestion: Version control is a system that tracks changes to code, which
    helps maintain a history of modifications, making it easier to revert to
    previous versions, and track contributions. You can use `git
    <https://git-scm.com/>`_ to handle everything from small to very large
    projects.

- match: No changelog file.
  suggestion: A changelog is a curated, chronological record of all notable
    changes made to a software project. For research software, a changelog
    plays a vital role in ensuring transparency, reproducibility, and usability
    by informing users, developers, and collaborators of updates and
    improvements over time. A common and recommended format is `Keep a
    Changelog <https://keepachangelog.com/en/>`_, which structures entries by
    version and change type.

- match: No unit testing.
  suggestion: Unit testing is the process of writing and running small,
    isolated tests to check that individual components (or units, e.g.
    functions, classes, modules) of your software work as expected. For
    research software, unit tests help ensure scientific correctness of
    implemented algorithms, prevent regression when code evolves, improve
    reproducibility and trust in computational results, and make it easier for
    new contributors to refactor code safely. You can find more information on
    unit testing in the "Code Testing" section of the `Turing Way
    <https://book.the-turing-way.org/reproducible-research/testing>`_.

- match: No packaging.
  suggestion: Packaging is the process of bundling code, dependencies, and
    metadata into a distributable and installable format. For research
    software, packaging is crucial for ensuring that software can be shared,
    installed, cited, and reused reliably by others. You can find more
    information in the `Python for Scientific Computing
    <https://aaltoscicomp.github.io/python-for-scicomp/packaging/>`_
    CodeRefinery course.

- match: No license file.
  suggestion: A software license is a legal instrument that defines how others
    can use, modify, and distribute your software. In the context of research
    software, choosing an open license is critical for enabling reuse,
    collaboration, reproducibility, and proper credit. Visit `Choose an open
    source license <https://choosealicense.com>`_ website for more information.